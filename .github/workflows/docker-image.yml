name: Python CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PYTHON_VERSION: 3.11

jobs:
  # Step 1: Install and Build
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


  # Step 2: Testing
  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install test dependencies and run tests
        run: |
          pip install -r requirements.txt

  # Step 3: Docker image build and push (optional)
  docker:
    runs-on: ubuntu-latest
    needs: [ test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: manojkumar8008/myapp1:latest
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 host to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Docker container on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker pull manojkumar8008/myapp1:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 80:8000 manojkumar8008/myapp1:latest
          EOF
          

